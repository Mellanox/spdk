ARG  DOCA_IMAGE_TAG

FROM nvcr.io/nvstaging/doca/doca:${DOCA_IMAGE_TAG}
ARG _UID=6213
ARG _GID=11429
ARG _LOGIN=swx-jenkins
ARG _HOME=/var/home/$_LOGIN
ARG NGC_CLI_VER=3.51.0

### ENVIRONMENT VARIABLES ###
ENV DEBIAN_FRONTEND=noninteractive
ENV MODULEPATH=/hpc/local/etc/modulefiles
ENV TZ=Etc/UTC
ENV GIT_COMMITTER_NAME=swx-storage
ENV GIT_COMMITTER_EMAIL=swx-storage@nvidia.com

### GENERAL PACKAGES ###
RUN set -eux; \
    rm -rf /var/lib/apt/lists/* && \
    apt update && \
    apt install -y \
    sudo \
    environment-modules \
    ssh \
    curl \
    unzip \
    podman \
    gcc-9 \
    jq

### TOOLS INSTALL ###
RUN set -eux; \
    pip3 --no-cache-dir --quiet install gitlint codespell \
    packaging==21.3 \
    semver==2.13.0 && \
    cd /usr/local/bin/ && \
    wget https://raw.githubusercontent.com/torvalds/linux/master/scripts/checkpatch.pl && \
    chmod +x checkpatch.pl && \
    wget https://raw.githubusercontent.com/torvalds/linux/master/scripts/spelling.txt

### NGC-CLI ###
RUN set -eux; \
    if [ $(uname -m) = "aarch64" ]; then \
        NGC_CLI_URL="https://api.ngc.nvidia.com/v2/resources/nvidia/ngc-apps/ngc_cli/versions/${NGC_CLI_VER}/files/ngccli_arm64.zip"; \
    else \
        NGC_CLI_URL="https://api.ngc.nvidia.com/v2/resources/nvidia/ngc-apps/ngc_cli/versions/${NGC_CLI_VER}/files/ngccli_linux.zip"; \
    fi; \
    wget --content-disposition $NGC_CLI_URL -O ngccli_linux.zip && \
    unzip ngccli_linux.zip && \
    chmod u+x ngc-cli/ngc && \
    ln -s /ngc-cli/ngc /usr/bin/ngc && \
    rm -f ngccli_linux.zip

### APT-CLEAN ###
RUN apt clean && rm -rf /var/lib/apt/lists/*

### ADD SERVICE USER ###
RUN echo "${_LOGIN} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers && \
    mkdir -p $_HOME && \
    groupadd -f -g "$_GID" "$_LOGIN" && \
    useradd -u "$_UID" -g "$_GID" -s /bin/bash -m -d ${_HOME} "$_LOGIN" && \
    chown $_LOGIN $_HOME

### POST STEPS ###
USER "${_LOGIN}"
SHELL [ "/bin/bash", "-c" ]
ENTRYPOINT [ "/bin/bash", "--login", "--rcfile", "/etc/bashrc", "-c" ]
